* 逃离心里舒适区
* Schedule

** Schedule For Job

*** 2016/01

**** DONE <2016-01-04 周一> [100%]
	 CLOSED: [2016-01-10 周日 09:51]
	 - State "DONE"       from "TODO"       [2016-01-10 周日 09:51]
***** DONE 挖矿经常出现冷却中，有的时候挖矿会没有动作，所以需要向自动挂机一样，
	  做一个标识
	  CLOSED: [2016-01-05 周二 17:18]
	  - State "DONE"       from "TODO"       [2016-01-05 周二 17:18]
***** DONE 微客户端模式下法师火墙特效无法显示
	  CLOSED: [2016-01-04 周一 16:10]
	  - State "DONE"       from "TODO"       [2016-01-04 周一 16:10]

**** DONE <2016-01-11 周一> [100%]
	 CLOSED: [2016-01-17 周日 14:09]
	 - State "DONE"       from "TODO"       [2016-01-17 周日 14:09]
***** DONE 使用一个单例后台进程管理（或称代理）所有本机微客户端的资源下载
	  CLOSED: [2016-01-17 周日 14:09]
	  - State "DONE"       from "PROCESSING" [2016-01-17 周日 14:09]
	  - State "PROCESSING" from "TODO"       [2016-01-11 周一 10:04]

**** DONE <2016-01-18 周一> [100%]
	 CLOSED: [2016-01-24 周日 17:16]
	 - State "DONE"       from "TODO"       [2016-01-24 周日 17:16]
***** DONE 后台进程在空闲时根据资源列表下载所有资源
	  CLOSED: [2016-01-21 周四 17:22]
	  - State "DONE"       from "DONE"       [2016-01-24 周日 17:16]
***** DONE 微客户端下载提示
	  CLOSED: [2016-01-20 周三 09:41]
	  - State "DONE"       from "TODO"       [2016-01-20 周三 09:41]

**** DONE <2016-01-25 周一> [100%]
	 CLOSED: [2016-02-01 周一 09:55]
	 - State "DONE"       from "TODO"       [2016-02-01 周一 09:55]
***** DONE 广播角色进入消息时也将其朝向信息同步下去
	  CLOSED: [2016-01-25 周一 14:41]
	  - State "DONE"       from "DONE"       [2016-02-01 周一 09:55]
***** DONE 设定焦点目标
	  CLOSED: [2016-01-27 周三 17:29]
	  - State "DONE"       from "TODO"       [2016-01-27 周三 17:29]

*** 2016/02

**** DONE <2016-02-01 周一> [100%]
	 CLOSED: [2016-02-03 周三 12:12]
	 - State "DONE"       from "TODO"       [2016-02-03 周三 12:12]
***** DONE 生死考验奖励：鼠标第一次移至奖励图标，tips没有置顶，被大窗口覆盖
	  CLOSED: [2016-02-03 周三 12:12]
	  - State "DONE"       from "TODO"       [2016-02-03 周三 12:12]

**** DONE <2016-02-19 周五> [100%]
	 CLOSED: [2016-02-20 周六 16:58]
	 - State "DONE"       from "TODO"       [2016-02-20 周六 16:58]
***** DONE 国战竞猜按钮风格不一致
	  CLOSED: [2016-02-20 周六 16:58]
	  - State "DONE"       from "TODO"       [2016-02-20 周六 16:58]

**** DONE <2016-02-22 周一> [100%]
	 CLOSED: [2016-02-28 周日 20:16]
	 - State "DONE"       from "TODO"       [2016-02-28 周日 20:16]
***** DONE 通过技能轨迹系统播放死亡击碎特效
	  CLOSED: [2016-02-24 周三 17:02]
	  - State "DONE"       from "TODO"       [2016-02-24 周三 17:02]
***** DONE NPC 头顶喊话窗口抖动
	  CLOSED: [2016-02-24 周三 17:03]
	  - State "DONE"       from "TODO"       [2016-02-24 周三 17:03]
***** DONE 微客户端代理进程通过共享内存方式向微客户端进程通知监听端口
	  CLOSED: [2016-02-22 周一 17:02]
	  - State "DONE"       from "TODO"       [2016-02-22 周一 17:02]

*** 2016/03

**** DONE <2016-02-29 周一> [100%]
	 CLOSED: [2016-03-06 周日 18:26]
	 - State "DONE"       from "TODO"       [2016-03-06 周日 18:26]
***** DONE 移植远征寄售系统
	  CLOSED: [2016-03-06 周日 18:25]
	  - State "DONE"       from "TODO"       [2016-03-06 周日 18:25]

	  已完成移植，接下来重点调试优化。

**** DONE <2016-03-07 周一> [100%]
	 CLOSED: [2016-03-14 周一 10:03]
	 - State "DONE"       from "TODO"       [2016-03-14 周一 10:03]
***** DONE 寄售系统移植及优化 [3/4]
	  CLOSED: [2016-03-14 周一 10:03]
	  - State "DONE"       from "TODO"       [2016-03-14 周一 10:03]

	  * [X] 寄售物品浏览界面重构
	  * [X] 玩家寄售界面重构
	  * [ ] 购买对话框重构
	  * [X] 寄售购买流程梳理

**** DONE <2016-03-14 周一> [100%]
	 CLOSED: [2016-03-21 周一 10:37]
	 - State "DONE"       from "TODO"       [2016-03-21 周一 10:37]

***** DONE 寄售系统跟踪优化
	  CLOSED: [2016-03-21 周一 10:37]
	  - State "DONE"       from "TODO"       [2016-03-21 周一 10:37]

**** DONE <2016-03-21 周一> [100%]
	 CLOSED: [2016-03-28 周一 10:20]
	 - State "DONE"       from "TODO"       [2016-03-28 周一 10:20]
***** DONE 整理微端多线程
	  CLOSED: [2016-03-21 周一 18:03]
	  - State "DONE"       from "TODO"       [2016-03-21 周一 18:03]
***** DONE 寄售跟进优化
	  CLOSED: [2016-03-28 周一 10:20]
	  - State "DONE"       from "TODO"       [2016-03-28 周一 10:20]

*** 2016/04

**** DONE <2016-03-28 周一> [100%]
	 CLOSED: [2016-04-04 周一 18:53]
	 - State "DONE"       from "TODO"       [2016-04-04 周一 18:53]

***** DONE 寄售跟进
	  CLOSED: [2016-04-04 周一 18:52]
	  - State "DONE"       from "DONE"       [2016-04-04 周一 18:52]
	  - State "DONE"       from "TODO"       [2016-04-04 周一 18:52]
***** DONE 微客户端资源下载改用 libcurl 库
	  CLOSED: [2016-04-04 周一 18:52]
	  - State "DONE"       from "TODO"       [2016-04-04 周一 18:52]

	  暂且观望

**** DONE <2016-04-04 周一> [100%]
	 CLOSED: [2016-04-11 周一 09:29]
	 - State "DONE"       from "TODO"       [2016-04-11 周一 09:29]
***** DONE 微客户端代理进程智能限速
	  CLOSED: [2016-04-11 周一 09:29]
	  - State "DONE"       from "PROCESSING" [2016-04-11 周一 09:29]
	  - State "PROCESSING" from "TODO"       [2016-04-04 周一 18:53]

**** DONE <2016-04-11 周一> [100%]
	 CLOSED: [2016-04-18 周一 09:42]
	 - State "DONE"       from "TODO"       [2016-04-18 周一 09:42]
***** DONE 废弃资源整理
	  CLOSED: [2016-04-18 周一 09:42]
	  - State "DONE"       from "TODO"       [2016-04-18 周一 09:42]

	  * [X] 场景
	  * [X] 模型
	  * [X] 特效

***** DONE 微客户端代理进程宕机时生成转储文件，并可通过邮件获取
	  CLOSED: [2016-04-12 周二 17:39]
	  - State "DONE"       from "TODO"       [2016-04-12 周二 17:39]
***** DONE 微端：CDN 或 微端云服务器从异常恢复后，保证微客户端继续可玩
	  CLOSED: [2016-04-12 周二 17:28]
	  - State "DONE"       from "TODO"       [2016-04-12 周二 17:28]

**** DONE <2016-04-18 周一> [100%]
	 CLOSED: [2016-04-23 周六 14:32]
	 - State "DONE"       from "TODO"       [2016-04-23 周六 14:32]

***** DONE 配合新版UI调整如下界面：技能/装备福利/寄售
	  CLOSED: [2016-04-21 周四 09:33]
	  - State "DONE"       from "TODO"       [2016-04-21 周四 09:33]
***** DONE mz 关联资源整理工具完善
	  CLOSED: [2016-04-18 周一 15:39]
	  - State "DONE"       from "TODO"       [2016-04-18 周一 15:39]

**** DONE <2016-04-25 周一> [100%]
	 CLOSED: [2016-04-30 周六 20:44]
	 - State "DONE"       from "TODO"       [2016-04-30 周六 20:44]
***** DONE 新增武器时装
	  CLOSED: [2016-04-30 周六 20:44]
	  - State "DONE"       from "TODO"       [2016-04-30 周六 20:44]
***** DONE 寄售行UI更换
	  CLOSED: [2016-04-27 周三 10:52]
	  - State "DONE"       from "TODO"       [2016-04-27 周三 10:52]
***** DONE 寄售入口显示荐字显示；当没有寄售物品时不再通过弹窗提示
	  CLOSED: [2016-04-26 周二 14:45]
	  - State "DONE"       from "TODO"       [2016-04-26 周二 14:45]
*** 2016/05
**** DONE <2016-05-03 周二> [100%]
	 CLOSED: [2016-05-07 周六 11:21]
	 - State "DONE"       from "TODO"       [2016-05-07 周六 11:21]
***** DONE 武器时装相关BUG修复/武器时装分区功能
	  CLOSED: [2016-05-07 周六 11:21]
	  - State "DONE"       from "TODO"       [2016-05-07 周六 11:21]
**** DONE <2016-05-09 周一> [100%]
	 CLOSED: [2016-05-16 周一 09:49]
	 - State "DONE"       from "TODO"       [2016-05-16 周一 09:49]
***** DONE 寄售行中将可进阶的紫装归类到橙色装备中
	  CLOSED: [2016-05-12 周四 17:26]
	  - State "DONE"       from "TODO"       [2016-05-12 周四 17:26]
***** DONE 微端下载库由 Winnet 改为 libcurl
	  CLOSED: [2016-05-12 周四 11:05]
	  - State "DONE"       from "TODO"       [2016-05-12 周四 11:05]
**** DONE <2016-05-16 周一> [100%]
	 CLOSED: [2016-05-23 周一 09:48]
	 - State "DONE"       from "TODO"       [2016-05-23 周一 09:48]
***** DONE 鼠标点击命中水域时，在水面显示地面光效，而非水底；支持一种新的载具类型：船。船在陆地时贴地行进，在水面时可以漂浮于水面
	  CLOSED: [2016-05-16 周一 09:51]
	  - State "DONE"       from "TODO"       [2016-05-16 周一 09:51]
**** DONE <2016-05-23 周一> [33%]
	 CLOSED: [2016-05-27 周五 17:17]
	 - State "DONE"       from "TODO"       [2016-05-27 周五 17:17]
***** DONE 封装特定于微端代理进程的 curl 库(解决外网下载时线程池相关的大量非法)
	  CLOSED: [2016-05-24 周二 14:22]
	  - State "DONE"       from "TODO"       [2016-05-24 周二 14:22]
*** 2016/06
**** DONE <2016-05-30 周一> [66%]
	 CLOSED: [2016-06-06 周一 09:54]
	 - STATE "DONE"       FROM "TODO"       [2016-06-06 周一 09:54]
***** DONE 载具技能体验优化
	  CLOSED: [2016-06-06 周一 09:53]
	  - STATE "DONE"       FROM "TODO"       [2016-06-06 周一 09:53]
***** DONE 龙舟地图载具抖动问题
	  CLOSED: [2016-06-06 周一 09:53]
	  - STATE "DONE"       FROM "TODO"       [2016-06-06 周一 09:53]
**** DONE <2016-06-06 周一> [50%]
	 CLOSED: [2016-06-12 周日 09:36]
	 - State "DONE"       from "TODO"       [2016-06-12 周日 09:36]
***** DONE 下载器通知后台记录“首次运行下载器”以及“完成下载/安装”等事件
	  CLOSED: [2016-06-08 周三 14:42]
	  - State "DONE"       from "TODO"       [2016-06-08 周三 14:42]
***** DONE 制作10M(或以下)登录器，游戏客户端所含文件在玩家第一次运行登录器后再开始下载。
	  CLOSED: [2016-06-07 周二 18:37]
	  - State "DONE"       from "TODO"       [2016-06-07 周二 18:37]
	  + [X] 游戏安装更新项只更新最新的一个版本组
	  + [X] 展开游戏安装包时，不检测MPK完整性
	  + [X] 游戏安装包安装完成后可支持设置本地的内测或压测版本号
	  + [X] 安装游戏时根据需要删除BIN和DATA目录
	  + [X] 安装过程中不弹更新公告
	  + [X] 游戏安装包安装一次后不可再次安装
	  + [ ] 登录器时常卡死
**** DONE <2016-06-12 周日> [80%]
	 CLOSED: [2016-06-19 周日 16:19]
	 - State "DONE"       from "TODO"       [2016-06-19 周日 16:19]
***** DONE 采用不同按钮提示登录器下载/安装过程
	  CLOSED: [2016-06-14 周二 09:44]
	  - State "DONE"       from "TODO"       [2016-06-14 周二 09:44]
***** DONE 法师1技能在副本中命中延时过大
	  CLOSED: [2016-06-13 周一 11:26]
	  - State "DONE"       from "TODO"       [2016-06-13 周一 11:26]
***** DONE 坐骑界面的图标底图显示优化
	  CLOSED: [2016-06-13 周一 09:53]
	  - State "DONE"       from "TODO"       [2016-06-13 周一 09:53]
***** DONE 数据下载写磁盘时增加应用层缓存，以期通过减少磁盘I/O频度来达到提高磁盘I/O效率的目的
	  CLOSED: [2016-06-16 周四 14:20]
	  - State "DONE"       from "TODO"       [2016-06-16 周四 14:20]
**** DONE <2016-06-20 周一> [80%]
	 CLOSED: [2016-06-25 周六 17:49]
	 - State "DONE"       from "TODO"       [2016-06-25 周六 17:49]
***** DONE 寄售搜索结果显示BUG修复；支持按所有类别搜索寄售物品
	  CLOSED: [2016-06-24 周五 15:59]
	  - State "DONE"       from "TODO"       [2016-06-24 周五 15:59]
***** DONE 登录器优化
	  CLOSED: [2016-06-25 周六 17:49]
	  - State "DONE"       from "TODO"       [2016-06-25 周六 17:49]
	  + [X] 可进入提示与进度条对不上
	  + [X] 修复：压测或内测版总有一个无法添加补丁包到文件系统
***** DONE 寄售购买物品弹出框中添加MAX功能
	  CLOSED: [2016-06-24 周五 16:17]
	  - State "DONE"       from "TODO"       [2016-06-24 周五 16:17]
***** DONE 登录器支持先微端后大端式的下载、安装方式 [100%]
	  CLOSED: [2016-06-23 周四 19:27]
	  - State "DONE"       from "TODO"       [2016-06-23 周四 19:27]
	  * [X] 更新完必要条目之后，玩家可进游戏，但登录器必须继续完成可选条目的更新
	  * [X] 游戏逻辑支持微端转大端(例如：Creature.mpk表示微端模式下所需的资源，则Creature1.mpk表示完整端模式下剩余的资源)
	  * [X] 下载进度由单一条目进度改为总进度；在玩家下载游戏安装包时，显示可进入提示
**** DONE <2016-06-27 周一> [66%]
	 CLOSED: [2016-07-04 周一 09:49]
	 - State "DONE"       from "TODO"       [2016-07-04 周一 09:49]
***** DONE 登录器优化 [100%]
	  CLOSED: [2016-06-29 周三 19:39]
	  - State "DONE"       from "TODO"       [2016-06-29 周三 19:39]
	  * [X] 登录器的安装包必须有某种关联对应剩余补丁包的机制
	  * [X] 微端代理进程不下载非当前必要资源
	  * [X] 游戏首次安装过程中去掉新闻弹框
	  * [X] 下载完游戏基本组件进入游戏，登录器停止下载，只下载微端资源
	  * [X] 下载器进度条去掉多余显示（下载点1/1）
***** TODO 登录器非法检查
***** DONE 多国国战竞猜(许天明) [代码Review]
	  CLOSED: [2016-07-01 周五 11:49]
	  - State "DONE"       from "TODO"       [2016-07-01 周五 11:49]
*** 2016/07
**** DONE <2016-07-04 周一> [100%]
	 CLOSED: [2016-07-10 周日 20:25]
	 - State "DONE"       from "TODO"       [2016-07-10 周日 20:25]
***** DONE 登录器BUG修复：下载所显示进度与实际进度不匹配
	  CLOSED: [2016-07-05 周二 19:22]
	  - State "DONE"       from "TODO"       [2016-07-05 周二 19:22]
***** DONE 登录器支持开机启动
	  CLOSED: [2016-07-06 周三 10:38]
	  - State "DONE"       from "TODO"       [2016-07-06 周三 10:38]
**** DONE <2016-07-11 周一> [66%]
	 CLOSED: [2016-07-18 周一 17:14]
	 - State "DONE"       from "TODO"       [2016-07-18 周一 17:14]
***** DONE 针对性屏蔽受击闪白
	  CLOSED: [2016-07-13 周三 15:06]
	  - State "DONE"       from "TODO"       [2016-07-13 周三 15:06]
***** DONE 下载器换肤及体验优化
	  CLOSED: [2016-07-18 周一 17:14]
	  - State "DONE"       from "TODO"       [2016-07-18 周一 17:14]
**** DONE <2016-07-18 周一> [75%]
	 CLOSED: [2016-07-25 周一 09:31]
	 - State "DONE"       from "TODO"       [2016-07-25 周一 09:31]
***** DONE 登录器界面调整
	  CLOSED: [2016-07-22 周五 12:25]
	  - State "DONE"       from "TODO"       [2016-07-22 周五 12:25]
***** DONE 登录器弹窗程序
	  CLOSED: [2016-07-22 周五 12:25]
	  - State "DONE"       from "TODO"       [2016-07-22 周五 12:25]
***** DONE 微端代理进程优化
	  CLOSED: [2016-07-22 周五 12:25]
	  - State "DONE"       from "TODO"       [2016-07-22 周五 12:25]
**** DONE <2016-07-25 周一> [0%]
	 CLOSED: [2016-08-01 周一 09:54]
	 - State "DONE"       from "TODO"       [2016-08-01 周一 09:54]
*** 2016/08
**** DONE <2016-08-01 周一> [100%]
	 CLOSED: [2016-08-08 周一 09:40]
	 - State "DONE"       from "TODO"       [2016-08-08 周一 09:40]
***** DONE 双人坐骑支持
	  CLOSED: [2016-08-08 周一 09:40]
	  - State "DONE"       from "TODO"       [2016-08-08 周一 09:40]
**** DONE <2016-08-08 周一> [66%]
	 CLOSED: [2016-08-15 周一 09:38]
	 - State "DONE"       from "TODO"       [2016-08-15 周一 09:38]
***** DONE 双人坐骑测试跟进
	  CLOSED: [2016-08-08 周一 17:04]
	  - State "DONE"       from "TODO"       [2016-08-08 周一 17:04]
***** DONE 联运版本的微端资源分离工具
	  CLOSED: [2016-08-09 周二 15:09]
	  - State "DONE"       from "TODO"       [2016-08-09 周二 15:09]
**** DONE <2016-08-15 周一> [100%]
	 CLOSED: [2016-08-22 周一 10:44]
	 - State "DONE"       from "TODO"       [2016-08-22 周一 10:44]
***** DONE 联运登录器 [13/13]
	  CLOSED: [2016-08-22 周一 10:44]
	  - State "DONE"       from "TODO"       [2016-08-22 周一 10:44]
	  + [X] logo
	  + [X] 链接
	   	官网地址：http://syzj.9377.com/main.html
	   	论坛地址：http://bbs.9377.com/forum-912-1.html
	   	客服地址：http://www.9377.com/kefu.html
	   	充值地址：http://wvw.9377.com/pay_index.php?gid=292
	  + [X] 注册账号
	  + [X] 轮播图和新闻
	  + [X] 补丁下载地址
	  + [X] 游戏修复里的客户端下载地址
	  + [X] serverlist.xml修改
	  + [X] 登陆器编译去掉调试信息
	  + [X] 去掉发dump邮件功能
	  + [X] 写版号的地方换成《神谕之剑》的版号
	  + [X] 日常更新分支
	  + [X] 角色查询链接
	  + [X] 更新公告
***** DONE 登录创建角色 [9/9]
	  CLOSED: [2016-08-22 周一 10:44]
	  - State "DONE"       from "TODO"       [2016-08-22 周一 10:44]
	  + [X] 联运账号密码登陆
	  + [X] 创建角色声明
	  + [X] 预约送礼
	  + [X] 去掉角色界面二维码图片
	  + [X] 创建新角色开始默认随机名字
	  + [X] 创建完角色自动进游戏
	  + [X] 注册账号
	  + [X] 忘记密码
	  + [X] 角色查询链接
**** DONE <2016-08-22 周一> [100%]
	 CLOSED: [2016-08-29 周一 09:33]
	 - State "DONE"       from "TODO"       [2016-08-29 周一 09:33]
***** DONE 联运版本的登录器和客户端跟进 [6/7]
	  CLOSED: [2016-08-25 周四 14:36]
	  - State "DONE"       from "TODO"       [2016-08-25 周四 14:36]
	  + [X] 不需下载 serverlist.xml
	  + [ ] GetLast 步骤经常无法下载配置文件
	  + [X] 账号冲突中的返回按钮应返回到登录器
	  + [X] 选角界面中的“上一步”按钮需返回到登录器
	  + [X] 创建角色时需先随机名字
	  + [X] 创建好角色后直接进入游戏
	  + [X] 登录器更新成功后启动代理进程
*** 2016/09

**** DONE <2016-08-29 周一> [66%]
	 CLOSED: [2016-09-03 周六 17:16]
	 - State "DONE"       from "TODO"       [2016-09-03 周六 17:16]
***** TODO 玩家在读取地图过程中，送鲜花不会记录到夫妻成就
***** DONE AES加密算法移植
	  CLOSED: [2016-09-03 周六 10:22]
	  - State "DONE"       from "TODO"       [2016-09-03 周六 10:22]
***** DONE 周五 [75%]
	  CLOSED: [2016-09-03 周六 17:16]
	  - State "DONE"       from "TODO"       [2016-09-03 周六 17:16]
	  + [X] fix bug: 不能随机名字
	  + [X] 登录器重构
	  + [ ] 挖矿图标遮挡DIDA
	  + [X] 插入排序和归并排序

**** DONE <2016-09-05 周一> [100%]
	 CLOSED: [2016-09-09 周五 17:14]
	 - State "DONE"       from "TODO"       [2016-09-09 周五 17:14]
***** DONE 不败传说支持使用内嵌页方式登录器
	  CLOSED: [2016-09-09 周五 17:14]
	  - State "DONE"       from "TODO"       [2016-09-09 周五 17:14]
***** DONE 修复：挖矿提示遮挡DIDA
	  CLOSED: [2016-09-05 周一 15:39]
	  - State "DONE"       from "TODO"       [2016-09-05 周一 15:39]
**** DONE <2016-09-12 周一> [100%]
	 CLOSED: [2016-09-18 周日 09:32]
	 - State "DONE"       from "TODO"       [2016-09-18 周日 09:32]
***** DONE 调通不败传说内嵌页方式登录器
	  CLOSED: [2016-09-14 周三 09:35]
	  - State "DONE"       from "TODO"       [2016-09-14 周三 09:35]
**** DONE <2016-09-19 周一> [100%]
	 CLOSED: [2016-09-26 周一 09:39]
	 - State "DONE"       from "TODO"       [2016-09-26 周一 09:39]
***** DONE 有无可能在打开游戏时屏蔽防火墙提示
	  CLOSED: [2016-09-26 周一 09:38]
	  - State "DONE"       from "TODO"       [2016-09-26 周一 09:38]

	  暂时没发现办法！

***** DONE 内嵌页方式登录端起始时不显示进度信息，点进入游戏后再显示
	  CLOSED: [2016-09-21 周三 16:23]
	  - State "DONE"       from "TODO"       [2016-09-21 周三 16:23]
***** DONE 弹窗广告程序不需校验内嵌页，且配置独立的皮肤目录
	  CLOSED: [2016-09-21 周三 14:23]
	  - State "DONE"       from "TODO"       [2016-09-21 周三 14:23]
***** DONE 支持未鉴定橙装可回收
	  CLOSED: [2016-09-20 周二 14:56]
	  - State "DONE"       from "TODO"       [2016-09-20 周二 14:56]
***** DONE 给微客户端代理程序添加图标
	  CLOSED: [2016-09-19 周一 15:18]
	  - State "DONE"       from "TODO"       [2016-09-19 周一 15:18]
**** TODO <2016-09-26 周一> [16%]
***** DONE 问题跟踪："获取最新版本信息失败!请检查网络及防火墙设置."
	  CLOSED: [2016-09-29 周四 15:19]
	  - State "DONE"       from "TODO"       [2016-09-29 周四 15:19]

*** 2016/10

**** DONE <2016-10-09 周日> [16%]
	 CLOSED: [2016-10-17 周一 09:28]
	 - State "DONE"       from "TODO"       [2016-10-17 周一 09:28]
***** DONE 试玩支持
	  CLOSED: [2016-10-10 周一 17:01]
	  - State "DONE"       from "TODO"       [2016-10-10 周一 17:01]
**** DONE <2016-10-17 周一> [100%]
	 CLOSED: [2016-10-24 周一 09:45]
	 - State "DONE"       from "TODO"       [2016-10-24 周一 09:45]
***** DONE 飞火联运登录
	  CLOSED: [2016-10-20 周四 10:04]
	  - State "DONE"       from "TODO"       [2016-10-20 周四 10:04]
***** DONE 飞火联运需求 [2/2]
	  CLOSED: [2016-10-24 周一 09:45]
	  - State "DONE"       from "TODO"       [2016-10-24 周一 09:45]

	  + [X] 联运标识整理
	  + [X] 联运充值内嵌页

**** DONE <2016-10-24 周一> [100%]
	 CLOSED: [2016-10-28 周五 15:15]
	 - State "DONE"       from "TODO"       [2016-10-28 周五 15:15]

***** DONE 登录器换肤
	  CLOSED: [2016-10-28 周五 15:14]
	  - State "DONE"       from "TODO"       [2016-10-28 周五 15:14]

***** DONE 内嵌页版登录器换肤
	  CLOSED: [2016-10-28 周五 15:15]
	  - State "DONE"       from "TODO"       [2016-10-28 周五 15:15]
*** 2016/11
**** DONE <2016-10-31 周一> [83%]
	 CLOSED: [2016-11-05 周六 16:49]
	 - State "DONE"       from "TODO"       [2016-11-05 周六 16:49]
***** DONE 修复：敌国团队可合并
	  CLOSED: [2016-11-01 周二 10:06]
	  - State "DONE"       from "TODO"       [2016-11-01 周二 10:06]
***** DONE 修复：释放载具技能常出现技能ID错误
	  CLOSED: [2016-10-31 周一 16:04]
	  - State "DONE"       from "TODO"       [2016-10-31 周一 16:04]
***** DONE 飞火联运问题跟踪
	  CLOSED: [2016-11-02 周三 12:04]
	  - State "DONE"       from "TODO"       [2016-11-02 周三 12:04]
	  + [X] 启动器参数带双引号
	  + [X] 启动器注册页需要传外部参数
***** DONE 新增龙石：金龙石，圣金龙盘
	  CLOSED: [2016-11-02 周三 17:05]
	  - State "DONE"       from "TODO"       [2016-11-02 周三 17:05]
***** DONE 双人坐骑支持拒绝邀请的效果
	  CLOSED: [2016-11-05 周六 16:49]
	  - State "DONE"       from "TODO"       [2016-11-05 周六 16:49]
**** DONE <2016-11-07 周一> [66%]
	 CLOSED: [2016-11-14 周一 14:26]
	 - State "DONE"       from "TODO"       [2016-11-14 周一 14:26]
***** DONE 9377腾讯联运启动器换肤
	  CLOSED: [2016-11-10 周四 11:43]
	  - State "DONE"       from "TODO"       [2016-11-10 周四 11:43]
***** DONE 腾讯开放平台登录接入
	  CLOSED: [2016-11-10 周四 09:56]
	  - State "DONE"       from "TODO"       [2016-11-10 周四 09:56]
**** DONE <2016-11-14 周一> [100%]
	 CLOSED: [2016-11-21 周一 10:19]
	 - State "DONE"       from "TODO"       [2016-11-21 周一 10:19]
***** DONE 腾讯开放平台联运接入 [4/4]
	  CLOSED: [2016-11-21 周一 10:19]
	  - State "DONE"       from "TODO"       [2016-11-21 周一 10:19]
	  * [X] win7任务栏图标处理
	  * [X] 返回登录处理：1、向腾讯微端请求建立新连接 2、打开登录器 3、登录器与腾讯微端建立连接 4、关闭游戏
	  * [X] openkey续期
	  * [X] pfkey实时获取机制
***** DONE 提供寄售物品搜索接口(Consign_SearchGoods)
	  CLOSED: [2016-11-16 周三 11:52]
	  - State "DONE"       from "TODO"       [2016-11-16 周三 11:52]
***** DONE 坐骑封印珠tips优化
	  CLOSED: [2016-11-16 周三 18:25]
	  - State "DONE"       from "TODO"       [2016-11-16 周三 18:25]
***** DONE 遇到合区活动刚好在31号结束的时候，界面时间显示会出现变成下月0号的情况
	  CLOSED: [2016-11-17 周四 09:51]
	  - State "DONE"       from "TODO"       [2016-11-17 周四 09:51]
***** DONE 技能标记工具
	  CLOSED: [2016-11-18 周五 10:51]
	  - State "DONE"       from "TODO"       [2016-11-18 周五 10:51]
**** DONE <2016-11-21 周一> [100%]
	 CLOSED: [2016-11-30 周三 09:35]
	 - State "DONE"       from "TODO"       [2016-11-30 周三 09:35]
***** DONE 腾讯联运QZone特权 [2/2]
	  CLOSED: [2016-11-30 周三 09:35]
	  - State "DONE"       from "TODO"       [2016-11-30 周三 09:35]
	  * [X] 服务器逻辑(礼包配置，礼包领取)
	  * [X] UI显示
***** DONE 腾讯联运黄钻特权 [2/2]
	  CLOSED: [2016-11-30 周三 09:35]
	  - State "DONE"       from "TODO"       [2016-11-30 周三 09:35]
	  * [X] 服务器逻辑(礼包配置，礼包领取)
	  * [X] UI显示
*** 2016/12
**** DONE <2016-11-30 周三> [50%]
	 CLOSED: [2016-12-05 周一 09:29]
	 - State "DONE"       from "TODO"       [2016-12-05 周一 09:29]
***** DONE 腾讯开放平台接入 [1/1]
	  CLOSED: [2016-12-05 周一 09:29]
	  - State "DONE"       from "TODO"       [2016-12-05 周一 09:29]
	  + [X] 更新登录器版本，重启登录器时需要先向腾讯微端请求新连接，并将命令行参数原样传入
**** TODO <2016-12-05 周一> [66%]
***** DONE 新增成就 [9/9]
	  CLOSED: [2016-12-07 周三 09:57]
	  - State "DONE"       from "TODO"       [2016-12-07 周三 09:57]
	  + [X] 师德成就
	  + [X] 翅膀成就
	  + [X] 国家宝藏
	  + [X] 商行天下
	  + [X] 副本成就
	  + [X] 藏经阁
	  + [X] 技能心法
	  + [X] 神兵
	  + [X] 战魂
***** TODO 伏羲玄天盘功能开发
***** DONE 星盘数据整理：兼容现有数据结构; 保证数据可扩充性; 保证数据结构清晰、简洁; 数据读取和回写过程简洁明了
	  CLOSED: [2016-12-09 周五 18:09]
	  - State "DONE"       from "TODO"       [2016-12-09 周五 18:09]
**** TODO 龙盘功能扩展 [0/9]
	 + [ ] 伏羲玄天盘功能开发
	 + [ ] 伏羲玄天盘界面开发
	 + [ ] 元素龙魂养成功能开发
	 + [ ] 元素龙魂养成界面开发
	 + [ ] 阴阳养成功能开发
	 + [ ] 阴阳养成界面开发
	 + [ ] 阴阳移位功能开发
	 + [ ] 阴阳移位界面开发
**** TODO 结婚巡游bug修复：在非巡游时间去发起巡游，虽然没有发起成功，但是道具“巡游令”扣除了，导致玩家完成不了相应的结婚成就
**** TODO 仅重启社会服导致重启前成立的团队在重启后解散后会出现异常
**** TODO 编写技能标记工具
**** TODO 去除登录器轮播图页面校验
**** TODO 微端优化计划 [0%]
***** TODO [#A] 空闲下载列表需依据主线任务作排序(如，在新手村的玩家如果有剩余带宽需下载下一张地图的资源)
***** TODO [#B] 可识别美术定义的场景资源优先级，并适当放弃低优先级物件的请求
***** TODO zip散文件是否可合入mpk包？
***** TODO 将登录器资源更新逻辑融入微端代理进程，为预更新或剩余资源下载铺路
***** TODO 内测/压测资源合并
*** BUG TRACE

**** TODO 边境任务如果最后一轮是偷马任务，完成偷马后任务追踪里头偷马任务不消失。（偶尔）

** Schedule For Career

*** 2016/01

**** DONE <2016-01-04 周一> [100%]
	 CLOSED: [2016-01-10 周日 09:52]
	 - STATE "DONE"       FROM "TODO"       [2016-01-10 周日 09:52]
***** DONE 读：《TCP/IP协议详解》
	  CLOSED: [2016-01-10 周日 09:52]
	  - STATE "DONE"       FROM "TODO"       [2016-01-10 周日 09:52]
	  * 广播与多播
	  * IGMP组管理协议

**** DONE <2016-01-11 周一> [100%]
	 CLOSED: [2016-01-18 周一 10:39]
	 - STATE "DONE"       FROM "TODO"       [2016-01-18 周一 10:39]
***** DONE 利用 SIGAR 收集和显示系统信息
	  CLOSED: [2016-01-18 周一 10:38]
	  - STATE "DONE"       FROM "PROCESSING" [2016-01-18 周一 10:38]
	  - STATE "PROCESSING" FROM "TODO"       [2016-01-11 周一 10:14]
	  - CPU命令
	  - MEM命令
	  - UPDATE命令
***** DONE 应用程序主循环设计
	  CLOSED: [2016-01-14 周四 16:06]
	  - STATE "DONE"       FROM "TODO"       [2016-01-14 周四 16:06]
***** DONE C++使用继承时子对象的内存布局
	  CLOSED: [2016-01-12 周二 22:53]
	  - STATE "DONE"       FROM "TODO"       [2016-01-12 周二 22:53]
***** DONE SNAIL跨平台编译
	  CLOSED: [2016-01-17 周日 14:11]
	  - STATE "DONE"       FROM "TODO"       [2016-01-17 周日 14:11]
***** DONE SNAIL新增TRACE支持
	  CLOSED: [2016-01-17 周日 14:11]
	  - STATE "DONE"       FROM "TODO"       [2016-01-17 周日 14:11]

**** DONE <2016-01-18 周一> [100%]
	 CLOSED: [2016-01-25 周一 10:34]
	 - STATE "DONE"       FROM "TODO"       [2016-01-25 周一 10:34]
***** DONE TCP 连接的建立和终止
	  CLOSED: [2016-01-18 周一 22:55]
	  - STATE "DONE"       FROM "DONE"       [2016-01-25 周一 10:34]
***** DONE TCP 交互数据流
	  CLOSED: [2016-01-21 周四 18:30]
	  - STATE "DONE"       FROM "TODO"       [2016-01-21 周四 18:30]
***** DONE TCP 成块数据流
	  CLOSED: [2016-01-21 周四 18:30]
	  - STATE "DONE"       FROM "TODO"       [2016-01-21 周四 18:30]
***** DONE TCP 的超时和重传机制
	  CLOSED: [2016-01-24 周日 17:17]
	  - STATE "DONE"       FROM "TODO"       [2016-01-24 周日 17:17]

**** DONE <2016-01-25 周一> [100%]
	 CLOSED: [2016-02-01 周一 09:57]
	 - STATE "DONE"       FROM "TODO"       [2016-02-01 周一 09:57]
***** DONE 实现基于共享内存的主从式消息订阅/发布模型
	  CLOSED: [2016-02-01 周一 09:56]
	  - STATE "DONE"       FROM "TODO"       [2016-02-01 周一 09:56]
***** DONE TCP 坚持定时器
	  CLOSED: [2016-01-26 周二 10:53]
	  - STATE "DONE"       FROM "DONE"       [2016-02-01 周一 09:57]
***** DONE TCP 保活定时器(KEEP ALIVE)
	  CLOSED: [2016-01-26 周二 10:53]
	  - STATE "DONE"       FROM "TODO"       [2016-01-26 周二 10:53]

*** 2016/02

**** DONE <2016-02-01 周一> [100%]
	 CLOSED: [2016-02-19 周五 09:38]
	 - STATE "DONE"       FROM "TODO"       [2016-02-19 周五 09:38]
***** DONE 调整和改善CENTOS配置的MAKEFILE
	  CLOSED: [2016-02-02 周二 15:58]
	  - STATE "DONE"       FROM "TODO"       [2016-02-02 周二 15:58]
***** DONE LINUX 基本命令总结
	  CLOSED: [2016-02-02 周二 15:41]
	  - STATE "DONE"       FROM "TODO"       [2016-02-02 周二 15:41]
***** DONE CENTOS 7 SYSTEMD服务简介
	  CLOSED: [2016-02-19 周五 09:37]
	  - STATE "DONE"       FROM "TODO"       [2016-02-19 周五 09:37]

**** DONE <2016-02-19 周五> [100%]
	 CLOSED: [2016-02-25 周四 09:50]
	 - STATE "DONE"       FROM "TODO"       [2016-02-25 周四 09:50]
***** DONE 网络服务器开发总结：HTTP://MY.OSCHINA.NET/U/181613/BLOG/596022?FROMERR=U59OFNAJ
	  CLOSED: [2016-02-19 周五 19:14]
	  - STATE "DONE"       FROM "TODO"       [2016-02-19 周五 19:14]

**** DONE <2016-02-22 周一> [100%]
	 CLOSED: [2016-02-28 周日 20:22]
	 - STATE "DONE"       FROM "TODO"       [2016-02-28 周日 20:22]
***** DONE 读 ZMQ 文档
	  CLOSED: [2016-02-28 周日 20:18]
	  - STATE "DONE"       FROM "TODO"       [2016-02-28 周日 20:18]
****** DONE ZMQ基础
	   CLOSED: [2016-02-28 周日 20:18]
	   - STATE "DONE"       FROM "TODO"       [2016-02-28 周日 20:18]
****** DONE ZMQ进阶
	   CLOSED: [2016-02-28 周日 20:18]
	   - STATE "DONE"       FROM "TODO"       [2016-02-28 周日 20:18]
***** DONE 读 《游戏引擎架构》 [7/7]
	  CLOSED: [2016-02-28 周日 20:22]
	  - STATE "DONE"       FROM "TODO"       [2016-02-28 周日 20:22]
	  - [X] 专业工具
	  - [X] 软件工程基础
	  - [X] 游戏所需的 3D 数学
	  - [X] 游戏支持系统
	  - [X] 游戏循环及实时模拟
	  - [X] 人体接口学设备
	  - [X] 调试及开发工具

*** 2016/03

**** DONE <2016-02-29 周一> [100%]
	 CLOSED: [2016-03-06 周日 18:24]
	 - STATE "DONE"       FROM "TODO"       [2016-03-06 周日 18:24]
***** DONE WIRESHARK网络包分析攻击/BPF包过滤语言
	  CLOSED: [2016-03-06 周日 18:23]
	  - STATE "DONE"       FROM "TODO"       [2016-03-06 周日 18:23]

	  一条完整的 BPF 包过滤规则的构成是 ` *PROTO DIR TYPE* ID'。例如
	  `IP DST PORT 21', `ICMP DST HOST 192.168.1.1', `TCP SRC PORT 22' 等，都是
	  完整的包过滤规则。另外，我们可以通过与/或关系将这些规则组合起来形成强大的
	  BPF 包过滤语言。至于解析实现，采用与/或树将是不错的选择：整棵树由与节点、
	  或节点以及包含完整过滤规则的叶子节点构成。

***** DONE 阅读 《游戏引擎架构》 [1/1]
	  CLOSED: [2016-03-06 周日 18:13]
	  - STATE "DONE"       FROM "TODO"       [2016-03-06 周日 18:13]
	  * [X] 渲染引擎
***** DONE 《取悦的工序--如何理解游戏》
	  CLOSED: [2016-03-06 周日 18:12]
	  - STATE "DONE"       FROM "TODO"       [2016-03-06 周日 18:12]

**** DONE <2016-03-07 周一> [100%]
	 CLOSED: [2016-03-14 周一 11:14]
	 - STATE "DONE"       FROM "TODO"       [2016-03-14 周一 11:14]
***** DONE 完成《游戏引擎架构》的阅读
	  CLOSED: [2016-03-14 周一 11:14]
	  - STATE "DONE"       FROM "TODO"       [2016-03-14 周一 11:14]

	  * [X] 动画系统
	  * [ ] 物理系统
	  * [ ] 游戏性

***** DONE REDMINE 安装指引
	  CLOSED: [2016-03-14 周一 11:14]
	  - STATE "DONE"       FROM "TODO"       [2016-03-14 周一 11:14]
***** DONE MYSQL命令整理
	  CLOSED: [2016-03-10 周四 10:52]
	  - STATE "DONE"       FROM "TODO"       [2016-03-10 周四 10:52]

**** DONE <2016-03-14 周一> [100%]
	 CLOSED: [2016-03-21 周一 09:46]
	 - STATE "DONE"       FROM "TODO"       [2016-03-21 周一 09:46]
***** DONE 从业经验总结
	  CLOSED: [2016-03-17 周四 10:23]
	  - STATE "DONE"       FROM "TODO"       [2016-03-17 周四 10:23]
***** DONE PYTHON 语法总结
	  CLOSED: [2016-03-18 周五 11:41]
	  - STATE "DONE"       FROM "TODO"       [2016-03-18 周五 11:41]
***** DONE MY TETRIS
	  CLOSED: [2016-03-21 周一 09:45]
	  - STATE "DONE"       FROM "TODO"       [2016-03-21 周一 09:45]

	  重新使用 2D 平移、旋转方程实现
**** DONE <2016-03-21 周一> [100%]
	 CLOSED: [2016-03-28 周一 10:22]
	 - STATE "DONE"       FROM "TODO"       [2016-03-28 周一 10:22]

***** DONE THE BSD PACKET FILTER
	  CLOSED: [2016-03-24 周四 14:30]
	  - STATE "DONE"       FROM "TODO"       [2016-03-24 周四 14:30]

	  包过滤可用布尔表达式树或控制流图(CFG)实现，BPF 利用 CFG 实现。
***** DONE TCP 的性能和未来
	  CLOSED: [2016-03-24 周四 09:33]
	  - STATE "DONE"       FROM "TODO"       [2016-03-24 周四 09:33]
***** DONE C++ TEMPLATE（编译器泛型技术）
	  CLOSED: [2016-03-22 周二 19:53]
	  - STATE "DONE"       FROM "TODO"       [2016-03-22 周二 19:53]
***** DONE LINUX 平台下的调试工具：STRACE
	  CLOSED: [2016-03-22 周二 14:46]
	  - STATE "DONE"       FROM "DONE"       [2016-03-28 周一 10:22]
	  - STATE "DONE"       FROM "TODO"       [2016-03-22 周二 14:46]

	  LINUX 平台下的系统调用追踪和分析工具，可显示一个 LINUX 进程的全部系统调用信息及其性能统计。
	  例：
	  #+BEGIN_SRC SH
        $ STRACE -H # 显示帮助
        $ STRACE -C CD ~
        $ STRACE -P 2210
	  #+END_SRC

*** 2016/04
**** DONE <2016-03-28 周一> [100%]
	 CLOSED: [2016-04-04 周一 18:51]
	 - STATE "DONE"       FROM "TODO"       [2016-04-04 周一 18:51]
***** DONE 红黑树
	  CLOSED: [2016-04-04 周一 18:51]
	  - STATE "DONE"       FROM "TODO"       [2016-04-04 周一 18:51]
	  根据红黑树算法实现了简单的红黑树容器，包含插入和删除，但不能迭代元素。
***** DONE 仿函数
	  CLOSED: [2016-03-29 周二 15:47]
	  - STATE "DONE"       FROM "TODO"       [2016-03-29 周二 15:47]
***** DONE STL ITERATOR 设计
	  CLOSED: [2016-03-28 周一 10:24]
	  - STATE "DONE"       FROM "DONE"       [2016-04-04 周一 18:51]
	  - STATE "DONE"       FROM "TODO"       [2016-03-28 周一 10:24]
**** DONE <2016-04-04 周一> [100%]
	 CLOSED: [2016-04-11 周一 09:29]
	 - STATE "DONE"       FROM "TODO"       [2016-04-11 周一 09:29]
***** DONE 在 GITHUB 上搭建博客
	  CLOSED: [2016-04-11 周一 09:29]
	  - STATE "DONE"       FROM "TODO"       [2016-04-11 周一 09:29]
**** DONE <2016-04-11 周一> [100%]
	 CLOSED: [2016-04-18 周一 14:25]
	 - STATE "DONE"       FROM "TODO"       [2016-04-18 周一 14:25]
***** DONE 熟悉 ASYNCNET 库
	  CLOSED: [2016-04-18 周一 14:25]
	  - STATE "DONE"       FROM "TODO"       [2016-04-18 周一 14:25]
**** DONE <2016-04-18 周一> [100%]
	 CLOSED: [2016-04-23 周六 14:34]
	 - STATE "DONE"       FROM "TODO"       [2016-04-23 周六 14:34]
***** DONE 构建“软件积木”(以搭积木的方式编写应用软件)
	  CLOSED: [2016-04-23 周六 14:33]
	  - STATE "DONE"       FROM "TODO"       [2016-04-23 周六 14:33]

	  已完成 CILL 库的 CORE 模块和 CMD 模块编写

**** DONE <2016-04-25 周一> [100%]
	 CLOSED: [2016-05-03 周二 10:10]
	 - STATE "DONE"       FROM "TODO"       [2016-05-03 周二 10:10]
***** DONE 将 ASYNCNET 融合到 CILL 库
	  CLOSED: [2016-04-30 周六 23:10]
	  - STATE "DONE"       FROM "TODO"       [2016-04-30 周六 23:10]
***** DONE 为 ASYNCNET 编写回射测试程序
	  CLOSED: [2016-04-30 周六 20:46]
	  - STATE "DONE"       FROM "TODO"       [2016-04-30 周六 20:46]
*** 2016/05
**** DONE <2016-05-03 周二> [100%]
	 CLOSED: [2016-05-09 周一 11:27]
	 - STATE "DONE"       FROM "TODO"       [2016-05-09 周一 11:27]
***** DONE 为 KMEM 编写测试程序
	  CLOSED: [2016-05-09 周一 11:27]
	  - STATE "DONE"       FROM "TODO"       [2016-05-09 周一 11:27]
**** DONE <2016-05-09 周一> [100%]
	 CLOSED: [2016-05-16 周一 09:53]
	 - STATE "DONE"       FROM "TODO"       [2016-05-16 周一 09:53]
***** DONE 使用 IPTABLES 配置防火墙
	  CLOSED: [2016-05-12 周四 11:57]
	  - STATE "DONE"       FROM "TODO"       [2016-05-12 周四 11:57]
***** DONE KMEM 库中的 SLAB 算法说明
	  CLOSED: [2016-05-10 周二 18:16]
	  - STATE "DONE"       FROM "TODO"       [2016-05-10 周二 18:16]
***** DONE LINUX SLAB 分配器剖析
	  CLOSED: [2016-05-09 周一 18:20]
	  - STATE "DONE"       FROM "TODO"       [2016-05-09 周一 18:20]
**** DONE <2016-05-16 周一> [50%]
	 CLOSED: [2016-05-23 周一 09:49]
	 - STATE "DONE"       FROM "TODO"       [2016-05-23 周一 09:49]
***** DONE 反向代理服务器初步实现
	  CLOSED: [2016-05-23 周一 09:48]
	  - STATE "DONE"       FROM "TODO"       [2016-05-23 周一 09:48]
**** DONE <2016-05-23 周一> [75%]
	 CLOSED: [2016-05-30 周一 12:02]
	 - STATE "DONE"       FROM "TODO"       [2016-05-30 周一 12:02]
***** DONE INI 解析器完善
	  CLOSED: [2016-05-26 周四 10:34]
	  - STATE "DONE"       FROM "TODO"       [2016-05-26 周四 10:34]
***** DONE MD文档：UNIX 用户态下的进程知识
	  CLOSED: [2016-05-28 周六 23:05]
	  - STATE "DONE"       FROM "TODO"       [2016-05-28 周六 23:05]
***** DONE MD文档：UNIX 编程环境下的文件系统
	  CLOSED: [2016-05-28 周六 15:01]
	  - STATE "DONE"       FROM "TODO"       [2016-05-28 周六 15:01]
*** 2016/06
**** DONE <2016-05-30 周一> [100%]
	 CLOSED: [2016-06-06 周一 10:08]
	 - STATE "DONE"       FROM "TODO"       [2016-06-06 周一 10:08]
***** DONE 腾讯公司后台安全工程师职位面试
	  CLOSED: [2016-06-06 周一 10:08]
	  - STATE "DONE"       FROM "TODO"       [2016-06-06 周一 10:08]

	  涉及点：
	  1. 架构。这似乎是每次必答题，我这方面的造诣还远远不够看的。
	  2. 共享内存知识点。使用共享内存时应注意什么？1. 避免操作映射区以外的内存；2. ？
	  3. 共享内存时的同步手段？信号量。
	  4. 设计模式。
	  5. SOCKET 编程以及网络通信库。
	  6. 题目：BITMAP

**** DONE <2016-06-06 周一> [100%]
	 CLOSED: [2016-06-12 周日 09:40]
	 - State "DONE"       from "TODO"       [2016-06-12 周日 09:40]
***** DONE AsyncNet 库中 AsyncCore 设计
	  CLOSED: [2016-06-12 周日 09:40]
	  - State "DONE"       from "TODO"       [2016-06-12 周日 09:40]
***** DONE AsyncNet 中的数据结构
	  CLOSED: [2016-06-12 周日 09:40]
	  - State "DONE"       from "TODO"       [2016-06-12 周日 09:40]
	  + [ ] IVECTOR
	  + [ ] IMEMNODE
	  + [ ] IQUEUE
***** DONE md文档：Unix 编程环境下的 I/O
	  CLOSED: [2016-06-10 周五 22:53]
	  - State "DONE"       from "TODO"       [2016-06-10 周五 22:53]
***** DONE md文档：Unix 编程环境下的进程IPC
	  CLOSED: [2016-06-10 周五 17:16]
	  - State "DONE"       from "TODO"       [2016-06-10 周五 17:16]
***** DONE md文档：Unix 编程环境下的线程知识
	  CLOSED: [2016-06-09 周四 22:00]
	  - State "DONE"       from "TODO"       [2016-06-09 周四 22:00]

**** DONE <2016-06-12 周日> [50%]
	 CLOSED: [2016-06-19 周日 20:22]
	 - State "DONE"       from "TODO"       [2016-06-19 周日 20:22]
***** DONE 《Unix网络编程卷三(进程间的通信)》剩余章节阅读 [3/3]
	  CLOSED: [2016-06-19 周日 16:22]
	  - State "DONE"       from "TODO"       [2016-06-19 周日 16:22]
	  * [X] 单主机内进程间的远过程调用：门
	  * [X] 主机间的远过程调用：Sun RPC
	  * [X] Posix fcntl 记录上锁

**** DONE <2016-06-20 周一> [66%]
	 CLOSED: [2016-06-26 周日 18:57]
	 - State "DONE"       from "TODO"       [2016-06-26 周日 18:57]
***** DONE KBE环境搭建
	  CLOSED: [2016-06-26 周日 18:56]
	  - State "DONE"       from "TODO"       [2016-06-26 周日 18:56]
	  * [X] mysql 命令概要 [md]
***** DONE C++临时对象构建场景 [md]
	  CLOSED: [2016-06-25 周六 23:55]
	  - State "DONE"       from "TODO"       [2016-06-25 周六 23:55]

**** DONE <2016-06-27 周一> [%]
	 CLOSED: [2016-07-04 周一 09:57]
	 - State "DONE"       from "TODO"       [2016-07-04 周一 09:57]
***** TODO kbe 架构解析
	  * [X] kbengine 消息处理函数注册

*** 2016/07
**** DONE <2016-07-04 周一> [100%]
	 CLOSED: [2016-07-10 周日 20:26]
	 - State "DONE"       from "TODO"       [2016-07-10 周日 20:26]
***** DONE [[http://linux.vbird.org/linux_basic/#part1][第一部份 Linux 的规划与安装]] [100%]
	  CLOSED: [2016-07-10 周日 20:26]
	  - State "DONE"       from "TODO"       [2016-07-10 周日 20:26]
	  * [X] Linux是什么
	  * [X] Linux如何学习
	  * [X] 主机规划与磁盘分区
	  * [X] 安装CentOS 5.x与多重引导技巧
	  * [X] 首次登陆与在线求助 man page
***** DONE kbe 代码阅览
	  CLOSED: [2016-07-10 周日 20:25]
	  - State "DONE"       from "TODO"       [2016-07-10 周日 20:25]
***** DONE Linux 代码阅览
	  CLOSED: [2016-07-10 周日 20:26]
	  - State "DONE"       from "TODO"       [2016-07-10 周日 20:26]
**** DONE <2016-07-11 周一> [100%]
	 CLOSED: [2016-08-01 周一 09:33]
	 - State "DONE"       from "TODO"       [2016-08-01 周一 09:33]
***** DONE 格蠹汇编
	  CLOSED: [2016-07-18 周一 17:18]
	  - State "DONE"       from "TODO"       [2016-07-18 周一 17:18]
	  已阅部分章节，如果熟练WinDbg工具再来读这本书应该会更容易，感受也应该更真切。
***** DONE 抽离出 Linux 内核源码中使用的数据结构
	  CLOSED: [2016-07-18 周一 17:18]
	  - State "DONE"       from "TODO"       [2016-07-18 周一 17:18]
	  已将双向链表(list)抽离出来，目前已发现的还值得移植的有：rbtree, 字典。
**** DONE <2016-07-18 周一> [0%]
	 CLOSED: [2016-07-25 周一 09:31]
	 - State "DONE"       from "DONE"       [2016-08-01 周一 09:34]
	 - State "DONE"       from "TODO"       [2016-07-25 周一 09:31]
**** DONE <2016-07-25 周一> [40%]
	 CLOSED: [2016-08-01 周一 09:34]
	 - State "DONE"       from "TODO"       [2016-08-01 周一 09:34]
***** DONE Linux网络工具总结
	  CLOSED: [2016-07-29 周五 09:32]
	  - State "DONE"       from "TODO"       [2016-07-29 周五 09:32]
***** DONE Shadowsocks 搭建
	  CLOSED: [2016-07-26 周二 09:52]
	  - State "DONE"       from "TODO"       [2016-07-26 周二 09:52]
*** 2016/08
**** DONE <2016-08-01 周一> [100%]
	 CLOSED: [2016-08-08 周一 09:40]
	 - State "DONE"       from "TODO"       [2016-08-08 周一 09:40]
***** DONE DNS解析
	  CLOSED: [2016-08-08 周一 09:40]
	  - State "DONE"       from "TODO"       [2016-08-08 周一 09:40]
**** DONE <2016-08-08 周一> [100%]
	 CLOSED: [2016-08-15 周一 09:33]
	 - State "DONE"       from "TODO"       [2016-08-15 周一 09:33]
***** DONE 了解kcp的使用
	  CLOSED: [2016-08-15 周一 09:33]
	  - State "DONE"       from "TODO"       [2016-08-15 周一 09:33]
***** DONE 理解kcptun原理
	  CLOSED: [2016-08-15 周一 09:33]
	  - State "DONE"       from "TODO"       [2016-08-15 周一 09:33]
**** DONE <2016-08-15 周一> [100%]
	 CLOSED: [2016-08-22 周一 10:46]
	 - State "DONE"       from "TODO"       [2016-08-22 周一 10:46]
***** DONE 完成fasttun的初步开发工作
	  CLOSED: [2016-08-22 周一 10:46]
	  - State "DONE"       from "TODO"       [2016-08-22 周一 10:46]
**** DONE <2016-08-22 周一> [100%]
	 CLOSED: [2016-08-29 周一 09:53]
	 - State "DONE"       from "TODO"       [2016-08-29 周一 09:53]
***** DONE fasttun: kcptunnel 发送目的地地址改为动态模式
	  CLOSED: [2016-08-29 周一 09:53]
	  - State "DONE"       from "TODO"       [2016-08-29 周一 09:53]
***** DONE 完成 fasttun 的开发，并将其部署到 vps 上
	  CLOSED: [2016-08-29 周一 09:53]
	  - State "DONE"       from "TODO"       [2016-08-29 周一 09:53]
***** DONE fasttun: 多模式 kcp tunnel 支持
	  CLOSED: [2016-08-26 周五 11:06]
	  - State "DONE"       from "TODO"       [2016-08-26 周五 11:06]
***** DONE 初步 fasttun 的开发
	  CLOSED: [2016-08-25 周四 14:37]
	  - State "DONE"       from "TODO"       [2016-08-25 周四 14:37]
*** 2016/09
**** DONE <2016-08-29 周一> [66%]
	 CLOSED: [2016-09-05 周一 10:50]
	 - State "DONE"       from "TODO"       [2016-09-05 周一 10:50]
***** DONE fasttun: FastConnection的生命周期与Connection分离
	  CLOSED: [2016-09-01 周四 12:01]
	  - State "DONE"       from "TODO"       [2016-09-01 周四 12:01]
***** DONE fasttun Bug修复
	  CLOSED: [2016-09-01 周四 11:18]
	  - State "DONE"       from "TODO"       [2016-09-01 周四 11:18]
**** TODO <2016-09-05 周一> [66%]
***** TODO 微分、微分中值定理
***** TODO nginx源码阅读
***** DONE fasttun: 基于文件的列表缓存机制
	  CLOSED: [2016-09-29 周四 15:20]
	  - State "DONE"       from "TODO"       [2016-09-29 周四 15:20]
***** DONE 加强fasttun数据发送机制
	  CLOSED: [2016-09-26 周一 09:42]
	  - State "DONE"       from "TODO"       [2016-09-26 周一 09:42]
***** DONE fasttun增加心跳探测
	  CLOSED: [2016-09-26 周一 09:42]
	  - State "DONE"       from "TODO"       [2016-09-26 周一 09:42]
***** DONE cill库增加定时器
	  CLOSED: [2016-09-23 周五 10:21]
	  - State "DONE"       from "TODO"       [2016-09-23 周五 10:21]
***** DONE fasttun进一步优化 [1/1]
	  CLOSED: [2016-09-19 周一 10:06]
	  - State "DONE"       from "TODO"       [2016-09-19 周一 10:06]
	  * [X] 去除不必要的log
***** DONE ARQ(Automatic Repeat reQuest) 协议了解
	  CLOSED: [2016-09-09 周五 17:14]
	  - State "DONE"       from "TODO"       [2016-09-09 周五 17:14]

*** 2016/10

**** DONE <2016-10-09 周日> [37%]
	 CLOSED: [2016-10-24 周一 09:47]
	 - State "DONE"       from "TODO"       [2016-10-24 周一 09:47]

***** DONE 《C专家编程》阅读
	  CLOSED: [2016-10-24 周一 09:46]
	  - State "DONE"       from "TODO"       [2016-10-24 周一 09:46]
***** DONE bitset实现
	  CLOSED: [2016-10-18 周二 17:46]
	  - State "DONE"       from "TODO"       [2016-10-18 周二 17:46]
***** DONE 《C程序语言设计》阅读
	  CLOSED: [2016-10-18 周二 17:46]
	  - State "DONE"       from "TODO"       [2016-10-18 周二 17:46]

**** DONE <2016-10-24 周一> [14%]
	 CLOSED: [2016-10-31 周一 09:45]
	 - State "DONE"       from "TODO"       [2016-10-31 周一 09:45]
***** DONE cdecl程序实现
	  CLOSED: [2016-10-28 周五 15:16]
	  - State "DONE"       from "TODO"       [2016-10-28 周五 15:16]
*** 2016/11
**** DONE <2016-10-31 周一> [37%]
	 CLOSED: [2016-11-14 周一 14:25]
	 - State "DONE"       from "TODO"       [2016-11-14 周一 14:25]
***** DONE STL源码分析 [4/4]
	  CLOSED: [2016-11-14 周一 14:24]
	  - State "DONE"       from "TODO"       [2016-11-14 周一 14:24]
	  + [X] 空间分配器
	  + [X] 迭代器
	  + [X] 序列式容器(vector/list/dqueue/stack/queue/heap/priority_queue)
	  + [X] 关联式容器
***** DONE 二叉堆实现
	  CLOSED: [2016-11-08 周二 09:41]
	  - State "DONE"       from "TODO"       [2016-11-08 周二 09:41]
***** DONE fasttun说明文档
	  CLOSED: [2016-10-31 周一 09:46]
	  - State "DONE"       from "TODO"       [2016-10-31 周一 09:46]
**** DONE <2016-11-14 周一> [100%]
	 CLOSED: [2016-11-20 周日 14:27]
	 - State "DONE"       from "TODO"       [2016-11-20 周日 14:27]
***** DONE md文档：Unix 环境下的 Socket 编程知识
	  CLOSED: [2016-11-20 周日 14:27]
	  - State "DONE"       from "TODO"       [2016-11-20 周日 14:27]
***** DONE md文档：Unix 环境下的同步机制
	  CLOSED: [2016-11-20 周日 14:27]
	  - State "DONE"       from "TODO"       [2016-11-20 周日 14:27]
*** 2016/12
**** DONE <2016-11-30 周三> [%]
	 CLOSED: [2016-12-05 周一 09:36]
	 - State "DONE"       from "TODO"       [2016-12-05 周一 09:36]
**** TODO <2016-12-05 周一> [0%]
***** TODO 一致性啥希
***** TODO 阅读 《Effective C++》
**** TODO Lua源码分析
**** PROCESSING nginx源码解析 [50%]
	 - State "PROCESSING" from "TODO"       [2016-11-22 周二 21:40]
***** DONE nginx核心框架
	  CLOSED: [2016-12-05 周一 09:38]
	  - State "DONE"       from "TODO"       [2016-12-05 周一 09:38]

nginx采用分层模块化设计来组织所有部件，在运行configure脚本后，会在objs目录下生成一个文件ngx_modules.c。
该文件下的全局变量ngx_modules即记录了nginx运行时的所有模块：

#+begin_src c++
ngx_module_t *ngx_modules[] = {
    &ngx_core_module,
    &ngx_errlog_module,
    &ngx_conf_module,
    &ngx_regex_module,
    &ngx_events_module,
    &ngx_event_core_module,
    &ngx_epoll_module,
    &ngx_http_module,
    &ngx_http_core_module,
    &ngx_http_log_module,
    &ngx_http_upstream_module,
    &ngx_http_static_module,
    &ngx_http_autoindex_module,
    &ngx_http_index_module,
    &ngx_http_auth_basic_module,
    &ngx_http_access_module,
    &ngx_http_limit_conn_module,
    &ngx_http_limit_req_module,
    &ngx_http_geo_module,
    &ngx_http_map_module,
    &ngx_http_split_clients_module,
    &ngx_http_referer_module,
    &ngx_http_rewrite_module,
    &ngx_http_proxy_module,
    &ngx_http_fastcgi_module,
    &ngx_http_uwsgi_module,
    &ngx_http_scgi_module,
    &ngx_http_memcached_module,
    &ngx_http_empty_gif_module,
    &ngx_http_browser_module,
    &ngx_http_upstream_hash_module,
    &ngx_http_upstream_ip_hash_module,
    &ngx_http_upstream_least_conn_module,
    &ngx_http_upstream_keepalive_module,
    &ngx_http_upstream_zone_module,
    &ngx_http_write_filter_module,
    &ngx_http_header_filter_module,
    &ngx_http_chunked_filter_module,
    &ngx_http_range_header_filter_module,
    &ngx_http_gzip_filter_module,
    &ngx_http_postpone_filter_module,
    &ngx_http_ssi_filter_module,
    &ngx_http_charset_filter_module,
    &ngx_http_userid_filter_module,
    &ngx_http_headers_filter_module,
    &ngx_http_copy_filter_module,
    &ngx_http_range_body_filter_module,
    &ngx_http_not_modified_filter_module,
    NULL
};
#+end_src

ngx_modules是一个一维数组，它是如何来体现分层设计的呢？
我们来看下ngx_module_t的定义：

#+begin_src c++
struct ngx_module_s {
    ngx_uint_t            ctx_index;
    ngx_uint_t            index;

    char                 *name;

    ngx_uint_t            spare0;
    ngx_uint_t            spare1;

    ngx_uint_t            version;
    const char           *signature;

    void                 *ctx;
    ngx_command_t        *commands;
    ngx_uint_t            type;

    ngx_int_t           (*init_master)(ngx_log_t *log);

    ngx_int_t           (*init_module)(ngx_cycle_t *cycle);

    ngx_int_t           (*init_process)(ngx_cycle_t *cycle);
    ngx_int_t           (*init_thread)(ngx_cycle_t *cycle);
    void                (*exit_thread)(ngx_cycle_t *cycle);
    void                (*exit_process)(ngx_cycle_t *cycle);

    void                (*exit_master)(ngx_cycle_t *cycle);

    uintptr_t             spare_hook0;
    uintptr_t             spare_hook1;
    uintptr_t             spare_hook2;
    uintptr_t             spare_hook3;
    uintptr_t             spare_hook4;
    uintptr_t             spare_hook5;
    uintptr_t             spare_hook6;
    uintptr_t             spare_hook7;
};
typedef struct ngx_module_s      ngx_module_t;
#+end_src

ngx_module_t有一个type成员记录模块的类型，nginx预定义了如下几种类型：

#+begin_src c++
#define NGX_CORE_MODULE      0x45524F43  /* "CORE" */
#define NGX_CONF_MODULE      0x464E4F43  /* "CONF" */
#define NGX_EVENT_MODULE     0x544E5645  /* "EVNT" */
#define NGX_HTTP_MODULE      0x50545448  /* "HTTP" */
#define NGX_MAIL_MODULE      0x4C49414D  /* "MAIL" */
#+end_src

其中 NGX_CORE_MODULE 类型的模块为顶层模块，其他为二级模块。
顶层模块一般干两种事情：

  1. 负责核心事务
  2. 负责接入二级模块

***** TODO nginx事件模块
**** TODO [[http://linux.vbird.org/linux_basic/#part2][第二部分 Linux 文件、目录与磁盘格式]]
	 * [ ] Linux文件权限与目录配置
	 * [ ] Linux文件与目录管理
	 * [ ] Linux 磁盘与文件系统管理
	 * [ ] 文件的压缩与打包
**** TODO [[http://linux.vbird.org/linux_basic/#part3][第三部分：学习 Shell 与 Shell scripts]]
	 * [ ] vim程序编辑器
	 * [ ] 认识与学习 BASH
	 * [ ] 正规表示法与文件格式化处理
	 * [ ] 学习 shell scripts

**** TODO [[http://linux.vbird.org/linux_basic/#part4][第四部分：Linux 使用者管理]]
	 * [ ] Linux 账号管理与 ACL 权限控制
	 * [ ] 磁盘配额(Quota)与进阶文件系统管理
	 * [ ] 例行性工作排程 (crontab)
	 * [ ] 程序管理与 SELinux 初探

**** TODO [[http://linux.vbird.org/linux_basic/#part5][第五部分：Linux 系统管理员]]
	 * [ ] 认识系统服务(daemon)
	 * [ ] 认识与分析登录档
	 * [ ] 启动流程、模块管理与 loader
	 * [ ] 系统配置工具(网络与打印机)与硬件侦测
	 * [ ] 软件安装：原始码与 Tarball
	 * [ ] 软件安装：RPM, SRPM 与 YUM 功能
	 * [ ] X Window 配置介绍
	 * [ ] Linux 备份策略
	 * [ ] 核心编译

**** TODO [[http://linux.vbird.org/linux_server/#part1][第一部份：架站前的进修专区]]
**** TODO [[http://linux.vbird.org/linux_server/#part2][第二部分：主机的简易防火措施]]
**** TODO [[http://linux.vbird.org/linux_server/#part3][第三部分：局域网络内常见的服务器架设]]
**** TODO [[http://linux.vbird.org/linux_server/#part4][第四部分：常见因特网服务器架设]]
** Professional Skills

*** Lua

*** Nginx

*** Game Development

**** AI

** Summary

*** Be Skilled In

	* 擅长基于Unix平台的应用开发
	* 了解TCP/IP协议模型，及其工作原理
	* 熟悉中心拓扑结构的MMOG服务器架构

*** Work Exp

**** OG

***** 服务器架构

***** 技能

	  用状态模式来管理技能的释放流程。比如，我们可以抽象这么几种状态：正常状态、
	  蓄气状态、瞬发攻击状态、引导攻击状态。正常状态可以迁移到蓄气和两个攻击状
	  态；进入蓄气状态表示玩家释放蓄气技能，蓄气成功的话进入瞬发攻击状态；瞬发
	  攻击状态最常用，玩家大部分技能释放时都是进入该状态，对于非移动施法技能该
	  状态必须否决玩家的行走行为；引导攻击状态对应的玩家的读秒技能。

***** AI

****** 我们的解决方案

	   我们用事件/条件/行为规则来模拟怪物的一类条件发射，我们再将这样的规则用一
	   条决策封装起来。怪物有一组决策数组，在有事件发生的时候，通过轮训这个决策
	   数组就能模拟简单的怪物智能了。比如我们可以给“惹事怪”编辑这样一条决策：
	   当有玩家进入我的视野时，直接攻击；可以给“和平怪”编辑决策：当有玩家打我
	   时，逃跑。

***** 玩法

***** 微端模式支持

	  微端模式实际就是将本地文件放置网络读取。我们独立出一个 I/O 接口，游戏逻辑
	  中的所有 I/O 操作都通过该接口完成。该 I/O 接口支持异步模式，大端模式下，
	  调用本地 I/O 方法；微端模式下，调用网络 I/O 方法。

	  另外需要实现一个微端长连接服务器来管理所有的微端玩家。微端服务器的主要功能
	  有：推送资源地址；通过分析微端玩家的下载行为智能推送下载列表。

* Notes

** GAE(Google App Engine)

** Apache

*** Apache的配置文件http.conf参数含义详解

**** 基本配置

	 #+begin_src sh
       ServerRoot "/mnt/software/apache2" #你的apache软件安装的位置。其它指定的目录如果没有指定绝对路径，则目录是相对于该目录。
       PidFile logs/httpd.pid #第一个httpd进程(所有其他进程的父进程)的进程号文件位置。
       Listen 80 #服务器监听的端口号。
       ServerName www.clusting.com:80 #主站点名称（网站的主机名）。
       ServerAdmin admin@clusting.com #管理员的邮件地址。
       DocumentRoot "/mnt/web/clusting" #主站点的网页存储位置。
	 #+end_src

	 目录访问控制配置

	 #+begin_src html
       <Directory "D:/xampp/cgi-bin">
         Options FollowSymLinks
         AllowOverride None
         Order allow,deny
         Allow from all
       </Directory>
	 #+end_src

	 在上面这段目录属性配置中，主要有下面的选项：

	 1. Options：配置在特定目录使用哪些特性，常用的值和基本含义如下：

	    1. ExecCGI: 在该目录下允许执行CGI脚本。
		2. FollowSymLinks: 在该目录下允许文件系统使用符号连接。
		3. Indexes: 当用户访问该目录时，如果用户找不到DirectoryIndex指定的主页文件(例如index.html),则返回该目录下的文件列表给用户。
		4. SymLinksIfOwnerMatch: 当使用符号连接时，只有当符号连接的文件拥有者与实际文件的拥有者相同时才可以访问。

	    其它可用值和含义请参阅：http://www.clusting.com/Apache/ApacheManual/mod/core.html#options

	 2. AllowOverride：允许存在于.htaccess文件中的指令类型(.htaccess文件名是可以改变的，其文件名由AccessFileName指令决定)：

	    1. None: 当AllowOverride被设置为None时。不搜索该目录下的.htaccess文件（可以减小服务器开销）。
		2. All: 在.htaccess文件中可以使用所有的指令。

	    其他的可用值及含义(如：Options FileInfo AuthConfig Limit等)，请参看： http://www.clusting.com/Apache/ApacheManual/mod/core.html#AllowOverride

	 3. Order：控制在访问时Allow和Deny两个访问规则哪个优先：

		1. Allow：允许访问的主机列表(可用域名或子网，例如：Allow from 192.168.0.0/16)。
		2. Deny：拒绝访问的主机列表。

	    更详细的用法可参看：http://www.clusting.com/Apache/ApacheManual/mod/mod_access.html#order

	 #+begin_src sh
       DirectoryIndex index.html index.htm index.PHP #主页文件的设置（本例将主页文件设置为：index.html,index.htm和index.php）
	 #+end_src

**** 服务器的优化 (MPM: Multi-Processing Modules)

	 apache2主要的优势就是对多处理器的支持更好，在编译时同过使用–with-mpm选项来决定apache2的工作模式。如果知道当前的apache2使用什么工作机制，可以通过httpd -l命令列出apache的所有模块，就可以知道其工作方式：

	 * prefork：如果httpd -l列出prefork.c，则需要对下面的段进行配置：
	   1. StartServers 5 #启动apache时启动的httpd进程个数。
	   2. MinSpareServers 5 #服务器保持的最小空闲进程数。
	   3. MaxSpareServers 10 #服务器保持的最大空闲进程数。
	   4. MaxClients 150 #最大并发连接数。
	   5. MaxRequestsPerChild 1000 #每个子进程被请求服务多少次后被kill掉。0表示不限制，推荐设置为1000。
	   在该工作模式下，服务器启动后起动5个httpd进程(加父进程共6个，通过ps -ax|grep httpd命令可以看到)。当有用户连接时，apache会使用一个空闲进程为该连接服务，同时父进程会fork一个子进程。直到内存中的空闲进程达到 MaxSpareServers。该模式是为了兼容一些旧版本的程序。我缺省编译时的选项。

	 * worker：如果httpd -l列出worker.c，则需要对下面的段进行配置：
	   1. StartServers 2 #启动apache时启动的httpd进程个数。
	   2. MaxClients 150 #最大并发连接数。
	   3. MinSpareThreads 25 #服务器保持的最小空闲线程数。
	   4. MaxSpareThreads 75 #服务器保持的最大空闲线程数。
	   5. ThreadsPerChild 25 #每个子进程的产生的线程数。
	   6. MaxRequestsPerChild 0 #每个子进程被请求服务多少次后被kill掉。0表示不限制，推荐设置为1000。
	   该模式是由线程来监听客户的连接。当有新客户连接时，由其中的一个空闲线程接受连接。服务器在启动时启动两个进程，每个进程产生的线程数是固定的 (ThreadsPerChild决定)，因此启动时有50个线程。当50个线程不够用时，服务器自动fork一个进程，再产生25个线程。

	 * perchild：如果httpd -l列出perchild.c，则需要对下面的段进行配置：
	   1. NumServers 5 #服务器启动时启动的子进程数
	   2. StartThreads 5 #每个子进程启动时启动的线程数
	   3. MinSpareThreads 5 #内存中的最小空闲线程数
	   4. MaxSpareThreads 10 #最大空闲线程数
	   5. MaxThreadsPerChild 2000 #每个线程最多被请求多少次后退出。0不受限制。
	   6. MaxRequestsPerChild 10000 #每个子进程服务多少次后被重新fork。0表示不受限制。
	   该模式下，子进程的数量是固定的，线程数不受限制。当客户端连接到服务器时，又空闲的线程提供服务。 如果空闲线程数不够，子进程自动产生线程来为新的连接服务。该模式用于多站点服务器。
**** HTTP返回头信息配置
	 * ServerTokens Prod #该参数设置http头部返回的apache版本信息，可用的值和含义如下：
	   1. Prod：仅软件名称，例如：apache
	   2. Major：包括主版本号，例如：apache/2
	   3. Minor：包括次版本号，例如：apache/2.0
	   4. Min：仅apache的完整版本号，例如：apache/2.0.54
	   5. OS：包括操作系统类型，例如：apache/2.0.54（Unix）
	   6. Full：包括apache支持的模块及模块版本号，例如：Apache/2.0.54 (Unix) mod_ssl/2.0.54 OpenSSL/0.9.7g
	 * ServerSignature Off #在页面产生错误时是否出现服务器版本信息。推荐设置为Off
**** 持久性连接设置
	 * KeepAlive On #开启持久性连接功能。即当客户端连接到服务器，下载完数据后仍然保持连接状态。
	 * MaxKeepAliveRequests 100 #一个连接服务的最多请求次数。
	 * KeepAliveTimeout 30 #持续连接多长时间，该连接没有再请求数据，则断开该连接。缺省为15秒。
**** 别名设置
	 对于不在DocumentRoot指定的目录内的页面，既可以使用符号连接，也可以使用别名。别名的设置如下：
	 #+begin_src html
       Alias /download/ "/var/www/download/" #访问时可以输入:http://www.custing.com/download/
       #对该目录进行访问控制设置
       Options Indexes MultiViews
       AllowOverride AuthConfig
       Order allow,deny
       Allow from all
	 #+end_src
**** CGI设置
	 #+begin_src html
       scrīptAlias /cgi-bin/ "/mnt/software/apache2/cgi-bin/" # 访问时可以：http://www.clusting.com/cgi-bin/ 。但是该目录下的CGI脚本文件要加可执行权限！

       #设置目录属性
       AllowOverride None
       Options None
       Order allow,deny
       Allow from all
	 #+end_src
**** 日志的设置
	 * 错误日志的设置
	   #+begin_src sh
         ErrorLog logs/error_log #日志的保存位置
         LogLevel warn #日志的级别
	   #+end_src
	   显示的格式如下
	   #+begin_src html
         [Mon Oct 10 15:54:29 2005] [error] [client 192.168.10.22] access to /download/ failed, reason: user admin not allowed access
	   #+end_src
	 * 日志格式设置
	   日志的缺省格式有如下几种：
	   #+begin_src html
         LogFormat "%h %l %u %t "%r" %>s %b "%{Referer}i" "%{User-Agent}i"" combined
         LogFormat "%h %l %u %t "%r" %>s %b" common #common为日志格式名称
         LogFormat "%{Referer}i -> %U" referer
         LogFormat "%{User-agent}i" agent
         CustomLog logs/access_log common
	   #+end_src
	   格式中的各个参数如下：
	   #+begin_src html
         %h –客户端的ip地址或主机名
         %l –The 这是由客户端 identd 判断的RFC 1413身份，输出中的符号 "-" 表示此处信息无效。
         %u –由HTTP认证系统得到的访问该网页的客户名。有认证时才有效，输出中的符号 "-" 表示此处信息无效。
         %t –服务器完成对请求的处理时的时间。
         "%r" –引号中是客户发出的包含了许多有用信息的请求内容。
         %>s –这个是服务器返回给客户端的状态码。
         %b –最后这项是返回给客户端的不包括响应头的字节数。
         "%{Referer}i" –此项指明了该请求是从被哪个网页提交过来的。
         "%{User-Agent}i" –此项是客户浏览器提供的浏览器识别信息。
	   #+end_src
	   下面是一段访问日志的实例：
	   #+begin_src html
         192.168.10.22 – bearzhang [10/Oct/2005:16:53:06 +0800] "GET /download/ HTTP/1.1" 200 1228
         192.168.10.22 – - [10/Oct/2005:16:53:06 +0800] "GET /icons/blank.gif HTTP/1.1" 304 -
         192.168.10.22 – - [10/Oct/2005:16:53:06 +0800] "GET /icons/back.gif HTTP/1.1" 304 -
	   #+end_src
**** 虚拟主机的配置
	 * 基于IP地址的虚拟主机配置
	   #+begin_src html
         Listen 80

         DocumentRoot /www/example1
         ServerName www.example1.com

         DocumentRoot /www/example2
         ServerName www.example2.org
	   #+end_src
	 * 基于IP和多端口的虚拟主机配置
	   #+begin_src html
         Listen 172.20.30.40:80
         Listen 172.20.30.40:8080
         Listen 172.20.30.50:80
         Listen 172.20.30.50:8080

         DocumentRoot /www/example1-80
         ServerName www.example1.com

         DocumentRoot /www/example1-8080
         ServerName www.example1.com

         DocumentRoot /www/example2-80
         ServerName www.example1.org

         DocumentRoot /www/example2-8080
         ServerName www.example2.org
	   #+end_src
	 * 单个IP地址的服务器上基于域名的虚拟主机配置
	   #+begin_src html
         # Ensure that Apache listens on port 80
         Listen 80

         # Listen for virtual host requests on all IP addresses
         NameVirtualHost *:80

         DocumentRoot /www/example1
         ServerName www.example1.com
         ServerAlias example1.com. *.example1.com
         # Other directives here

         DocumentRoot /www/example2
         ServerName www.example2.org
         # Other directives here
	   #+end_src
	 * 在多个IP地址的服务器上配置基于域名的虚拟主机：
	   #+begin_src html
         Listen 80

         # This is the "main" server running on 172.20.30.40
         ServerName server.domain.com
         DocumentRoot /www/mainserver

         # This is the other address
         NameVirtualHost 172.20.30.50

         DocumentRoot /www/example1
         ServerName www.example1.com
         # Other directives here …

         DocumentRoot /www/example2
         ServerName www.example2.org
         # Other directives here …
	   #+end_src
	 * 在不同的端口上运行不同的站点(基于多端口的服务器上配置基于域名的虚拟主机)
	   #+begin_src html
         Listen 80
         Listen 8080

         NameVirtualHost 172.20.30.40:80
         NameVirtualHost 172.20.30.40:8080

         ServerName www.example1.com
         DocumentRoot /www/domain-80

         ServerName www.example1.com
         DocumentRoot /www/domain-8080

         ServerName www.example2.org
         DocumentRoot /www/otherdomain-80

         ServerName www.example2.org
         DocumentRoot /www/otherdomain-8080
	   #+end_src
	 * 基于域名和基于IP的混合虚拟主机的配置
	   #+begin_src html
         Listen 80

         NameVirtualHost 172.20.30.40

         DocumentRoot /www/example1
         ServerName www.example1.com

         DocumentRoot /www/example2
         ServerName www.example2.org

         DocumentRoot /www/example3
         ServerName www.example3.net
	   #+end_src
** Git																	:git:
*** Git分支
**** 分支查看
	 * 查看本地分支
	   #+BEGIN_SRC sh
         $ git branch
         * master
	   #+END_SRC
	 * 查看远程分支
	   #+BEGIN_SRC sh
         $ git branch -r
           kbengine/master
           origin/HEAD -> origin/master
           origin/master
	   #+END_SRC
	 * 查看所有分支
	   #+BEGIN_SRC sh
         $ git branch -a
         * master
           remotes/kbengine/master
           remotes/origin/HEAD -> origin/master
           remotes/origin/master
	   #+END_SRC
	 * 创建分支
	   #+BEGIN_SRC sh
         $ git branch <分支名>
	   #+END_SRC
	 * 删除本地分支
	   #+BEGIN_SRC sh
         $ git branch -d <分支名>
	   #+END_SRC
	 * 切换分支
	   #+BEGIN_SRC sh
         git checkout <分支名>
	   #+END_SRC
**** 分支合并
** Tools
*** VMware 虚拟机启动脚本
	#+begin_src sh
      start /min vmware.exe -x "F:\Virtual Machine\CentOS\CentOS.vmx"
      ping -n 10 127.0.0.1 >nul 2>nul
      taskkill /im vmware.exe /f
      exit
	#+end_src
* Articles
** MMOG
   * [[https://developer.valvesoftware.com/wiki/Main_Page][Source Engine]]

	 1. [ ] [[https://developer.valvesoftware.com/wiki/Latency_Compensating_Methods_in_Client/Server_In-game_Protocol_Design_and_Optimization][网络延时补偿]]
	 2. [ ] [[https://developer.valvesoftware.com/wiki/Lag_compensation][Lag compensation]]
	 3. [ ] [[https://developer.valvesoftware.com/wiki/Source_Multiplayer_Networking][Source Multiplayer Networking]]
